# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "tpm_tis" "nvme" "xhci_pci" "thunderbolt" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ "cryptd" ];
  boot.initrd.systemd = {
    enable = true;
    tpm2.enable = true;
    emergencyAccess = true;    
  };
  #boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-label/NIXOS_LUKS";
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.initrd.luks.devices = {
   "cryptroot" = {
       device = "/dev/disk/by-uuid/c7d12a84-9f3c-4af2-86a3-3d5fa0309394";
       allowDiscards = true;
       crypttabExtraOpts = ["tpm2-device=auto"];
     };
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/9152d066-aff6-490f-b831-d727c26b82aa";
      fsType = "btrfs";
      options = [ "subvol=root" "compress=zstd" "noatime"];
    };


  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/9152d066-aff6-490f-b831-d727c26b82aa";
      fsType = "btrfs";
      options = [ "subvol=home" "compress=zstd" "noatime"];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/9152d066-aff6-490f-b831-d727c26b82aa";
      fsType = "btrfs";
      options = [ "subvol=nix" "compress=zstd" "noatime"];
    };

  fileSystems."/var/log" =
    { device = "/dev/disk/by-uuid/9152d066-aff6-490f-b831-d727c26b82aa";
      fsType = "btrfs";
      options = [ "subvol=log" "compress=zstd" "noatime"];
      neededForBoot = true;
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/E121-E4D1";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp192s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.enableAllFirmware = true;
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
